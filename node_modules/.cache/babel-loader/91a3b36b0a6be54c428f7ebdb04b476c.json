{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\React\\\\confusion\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React from 'react';\nimport { Card, CardTitle, CardImg, CardBody, CardText, CardImgOverlay, ListGroup, ListGroupItem } from 'reactstrap';\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      src: dish.image,\n      alt: dish.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }\n    }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, dish.description)));\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  });\n}\n\nfunction RenderComments({\n  dish_comments\n}) {\n  if (dish_comments != null) {\n    const comm = dish_comments.comments.map(comment_obj => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, comment_obj.comment), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 81\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, \"--\", comment_obj.author, \" , \", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment_obj.date)))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 218\n        }\n      }));\n    });\n    return comm;\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    });\n  }\n}\n\nconst DishDetail = props => {\n  if (props.dish != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(RenderDish, {\n      dish: props.dish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(RenderComments, {\n      comments: props.dish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }\n    });\n  }\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["D:/projects/React/confusion/src/components/DishdetailComponent.js"],"names":["React","Card","CardTitle","CardImg","CardBody","CardText","CardImgOverlay","ListGroup","ListGroupItem","RenderDish","dish","image","name","description","RenderComments","dish_comments","comm","comments","map","comment_obj","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardTitle, CardImg, CardBody, CardText, CardImgOverlay, ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n\r\n\r\nfunction  RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n\r\n        }\r\n        else\r\n            return (\r\n                <div></div >\r\n            );\r\n\r\n\r\n    }\r\n\r\nfunction  RenderComments({dish_comments}) {\r\n        if (dish_comments != null) {\r\n            const comm = dish_comments.comments.map((comment_obj) => {\r\n                return (\r\n                    <div>\r\n                        <li className=\"list-unstyled\">{comment_obj.comment}</li><br></br>\r\n                        <li className=\"list-unstyled\">--{comment_obj.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment_obj.date)))}</li><br></br>\r\n                    </div>\r\n\r\n                );\r\n            });\r\n            return comm;\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.dish != null){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={props.dish} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <h4>Comments</h4>\r\n                            <RenderComments comments={props.dish} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    \r\n    \r\n            );\r\n        }else{\r\n            return(<div ></div>);\r\n        }\r\n\r\n    }\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}