{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => response.json()).then(dishes => dispatch(addDishes(dishes)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions').then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["D:/projects/React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","fetchDishes","dispatch","dishesLoading","fetch","then","response","json","dishes","addDishes","type","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","payload","ADD_DISHES","addComment","dishId","rating","author","comment","ADD_COMMENT","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED","ADD_PROMOS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAD,IAAc;AAE3CA,EAAAA,QAAQ,CAACC,aAAa,CAAC,IAAD,CAAd,CAAR;AACA,SAAOC,KAAK,CAACJ,OAAO,GAAG,QAAX,CAAL,CACNK,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDG,MAAM,IAAIN,QAAQ,CAACO,SAAS,CAACD,MAAD,CAAV,CAFjB,CAAP;AAGH,CANM;AAOP,OAAO,MAAML,aAAa,GAAG,OAAO;AAChCO,EAAAA,IAAI,EAAEZ,WAAW,CAACa;AADc,CAAP,CAAtB;AAIP,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACtCH,EAAAA,IAAI,EAAEZ,WAAW,CAACgB,aADoB;AAEtCC,EAAAA,OAAO,EAAEF;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMJ,SAAS,GAAID,MAAD,KAAa;AAClCE,EAAAA,IAAI,EAAEZ,WAAW,CAACkB,UADgB;AAElCD,EAAAA,OAAO,EAAEP;AAFyB,CAAb,CAAlB;AAKP,OAAO,MAAMS,UAAU,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,MAAsC;AAC5DX,EAAAA,IAAI,EAAEZ,WAAW,CAACwB,WAD0C;AAE5DP,EAAAA,OAAO,EAAE;AACLG,IAAAA,MAAM,EAAEA,MADH;AAELC,IAAAA,MAAM,EAAEA,MAFH;AAGLC,IAAAA,MAAM,EAAEA,MAHH;AAILC,IAAAA,OAAO,EAAEA;AAJJ;AAFmD,CAAtC,CAAnB;AAUP,OAAO,MAAME,aAAa,GAAG,MAAOrB,QAAD,IAAc;AAC7C,SAAOE,KAAK,CAACJ,OAAO,GAAG,UAAX,CAAL,CACNK,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDmB,QAAQ,IAAItB,QAAQ,CAACuB,WAAW,CAACD,QAAD,CAAZ,CAFnB,CAAP;AAGH,CAJM;AAMP,OAAO,MAAME,cAAc,GAAIb,OAAD,KAAc;AACxCH,EAAAA,IAAI,EAAEZ,WAAW,CAAC6B,eADsB;AAExCZ,EAAAA,OAAO,EAAEF;AAF+B,CAAd,CAAvB;AAKP,OAAO,MAAMY,WAAW,GAAID,QAAD,KAAe;AACtCd,EAAAA,IAAI,EAAEZ,WAAW,CAAC8B,YADoB;AAEtCb,EAAAA,OAAO,EAAES;AAF6B,CAAf,CAApB;AAKP,OAAO,MAAMK,WAAW,GAAG,MAAO3B,QAAD,IAAc;AAE3CA,EAAAA,QAAQ,CAAC4B,aAAa,EAAd,CAAR;AAEA,SAAO1B,KAAK,CAACJ,OAAO,GAAG,YAAX,CAAL,CACNK,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAED0B,MAAM,IAAI7B,QAAQ,CAAC8B,SAAS,CAACD,MAAD,CAAV,CAFjB,CAAP;AAGH,CAPM;AASP,OAAO,MAAMD,aAAa,GAAG,OAAO;AAChCpB,EAAAA,IAAI,EAAEZ,WAAW,CAACmC;AADc,CAAP,CAAtB;AAIP,OAAO,MAAMC,YAAY,GAAIrB,OAAD,KAAc;AACtCH,EAAAA,IAAI,EAAEZ,WAAW,CAACqC,aADoB;AAEtCpB,EAAAA,OAAO,EAAEF;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMmB,SAAS,GAAID,MAAD,KAAa;AAClCrB,EAAAA,IAAI,EAAEZ,WAAW,CAACsC,UADgB;AAElCrB,EAAAA,OAAO,EAAEgB;AAFyB,CAAb,CAAlB","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)));\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});"]},"metadata":{},"sourceType":"module"}