{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aboba\\\\Desktop\\\\projects\\\\React\\\\confusion\\\\src\\\\components\\\\commentComponent.js\";\nimport React, { Component } from 'react';\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  RenderComments(comments_array) {\n    const arr_comments = this.props.s_dish.comments.every(function (comment) {\n      if (this.props.s_dish != null) {\n        console.log(comment);\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }\n        }, \"comment\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    {\n      arr_comments;\n    }\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/aboba/Desktop/projects/React/confusion/src/components/commentComponent.js"],"names":["React","Component","Comments","constructor","props","RenderComments","comments_array","arr_comments","s_dish","comments","every","comment","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,cAAc,CAACC,cAAD,EAAiB;AAC3B,UAAMC,YAAY,GAAG,KAAKH,KAAL,CAAWI,MAAX,CAAkBC,QAAlB,CAA2BC,KAA3B,CAAiC,UAAUC,OAAV,EAAmB;AACrE,UAAI,KAAKP,KAAL,CAAWI,MAAX,IAAqB,IAAzB,EAA+B;AAC3BI,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAGH,OALD,MAMK;AACD,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AACJ,KAZoB,CAArB;AAaH;;AAGDG,EAAAA,MAAM,GAAG;AACL;AAAEP,MAAAA,YAAY;AAAE;AACnB;;AAxB4B;;AA2BjC,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    RenderComments(comments_array) {\r\n        const arr_comments = this.props.s_dish.comments.every(function (comment) {\r\n            if (this.props.s_dish != null) {\r\n                console.log(comment);\r\n                return (\r\n                    <p>comment</p>\r\n                );\r\n            }\r\n            else {\r\n                return (\r\n                    <div></div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        { arr_comments }\r\n    }\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}