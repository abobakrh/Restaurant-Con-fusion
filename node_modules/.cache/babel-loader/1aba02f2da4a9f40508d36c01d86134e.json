{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions').then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["D:/projects/React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","dishesFailed","type","DISHES_LOADING","DISHES_FAILED","payload","ADD_DISHES","addComment","dishId","rating","author","comment","ADD_COMMENT","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});"]},"metadata":{},"sourceType":"module"}