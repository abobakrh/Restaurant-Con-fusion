{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aboba\\\\Desktop\\\\projects\\\\React\\\\confusion\\\\src\\\\components\\\\commentComponent.js\";\nimport React, { Component } from 'react';\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  RenderComments(comments_array) {\n    const arr = comments_array.map(comment => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      }, comment);\n    });\n  }\n\n  render() {\n    if (this.props.dish_comment != null) {\n      return this.RenderComments(this.props.dish_comment.comments);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/aboba/Desktop/projects/React/confusion/src/components/commentComponent.js"],"names":["React","Component","Comments","constructor","props","RenderComments","comments_array","arr","map","comment","render","dish_comment","comments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,cAAc,CAACC,cAAD,EAAiB;AAC3B,UAAMC,GAAG,GAAGD,cAAc,CAACE,GAAf,CAAmBC,OAAO,IAAI;AACtC,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,OAAJ,CADJ;AAIH,KALW,CAAZ;AAMH;;AAGDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKN,KAAL,CAAWO,YAAX,IAA2B,IAA/B,EAAqC;AACjC,aACI,KAAKN,cAAL,CAAoB,KAAKD,KAAL,CAAWO,YAAX,CAAwBC,QAA5C,CADJ;AAGH,KAJD,MAIO;AACH,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAzB4B;;AA4BjC,eAAeV,QAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    RenderComments(comments_array) {\r\n        const arr = comments_array.map(comment => {\r\n            return (\r\n                <p>{comment}</p>\r\n            );\r\n\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.dish_comment != null) {\r\n            return (\r\n                this.RenderComments(this.props.dish_comment.comments)\r\n            );\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}