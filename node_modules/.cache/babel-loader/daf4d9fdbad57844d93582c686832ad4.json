{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Leaders = (state = {\n  isLoading: true,\n  errMess: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      };\n\n    case ActionTypes.DISHES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/projects/React/confusion/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","errMess","leaders","action","type","ADD_LEADERS","dishes","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAC5BC,EAAAA,OAAO,EAAE,IADmB;AAE5BC,EAAAA,OAAO,EAAC;AAFoB,CAAT,EAENC,MAFM,KAEK;AACxB,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,WAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CK,QAAAA,MAAM,EAAEH,MAAM,CAACI;AAA3D,OAAP;;AAEJ,SAAKV,WAAW,CAACW,cAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CK,QAAAA,MAAM,EAAE;AAAnD,OAAP;;AAEJ,SAAKT,WAAW,CAACY,aAAjB;AACI,aAAO,EAAC,GAAGV,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEE,MAAM,CAACI;AAA7C,OAAP;;AAEJ;AACI,aAAOR,KAAP;AAXR;AAaH,CAhBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}